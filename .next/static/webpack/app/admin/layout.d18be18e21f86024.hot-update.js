"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/admin/layout",{

/***/ "(app-pages-browser)/./utils/api.ts":
/*!**********************!*\
  !*** ./utils/api.ts ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   api: function() { return /* binding */ api; }\n/* harmony export */ });\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config */ \"(app-pages-browser)/./utils/config.ts\");\n\n// API client configuration\nconst config = (0,_config__WEBPACK_IMPORTED_MODULE_0__.getConfig)();\n// Create a centralized API client\nclass ApiClient {\n    // Get auth token from localStorage\n    getAuthToken() {\n        if (false) {}\n        return localStorage.getItem(\"token\");\n    }\n    // Get headers with auth token if available\n    getHeaders(customHeaders) {\n        const token = this.getAuthToken();\n        const headers = {\n            ...this.defaultHeaders,\n            ...customHeaders\n        };\n        if (token) {\n            headers[\"Authorization\"] = \"Bearer \".concat(token);\n        }\n        return headers;\n    }\n    // Generic request method\n    async request(endpoint) {\n        let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        const url = \"\".concat(this.baseURL).concat(endpoint);\n        const headers = this.getHeaders(options.headers);\n        try {\n            const response = await fetch(url, {\n                ...options,\n                headers,\n                credentials: \"include\"\n            });\n            // Handle non-JSON responses\n            const contentType = response.headers.get(\"content-type\");\n            if (!contentType || !contentType.includes(\"application/json\")) {\n                if (!response.ok) {\n                    throw new Error(\"HTTP error! status: \".concat(response.status));\n                }\n                return response;\n            }\n            const data = await response.json();\n            // Handle API errors\n            if (!response.ok) {\n                throw new Error(data.message || \"HTTP error! status: \".concat(response.status));\n            }\n            return data;\n        } catch (error) {\n            throw error;\n        }\n    }\n    // GET request\n    async get(endpoint, headers) {\n        return this.request(endpoint, {\n            method: \"GET\",\n            headers\n        });\n    }\n    // POST request\n    async post(endpoint, data, headers) {\n        return this.request(endpoint, {\n            method: \"POST\",\n            headers,\n            body: data ? JSON.stringify(data) : undefined\n        });\n    }\n    // PUT request\n    async put(endpoint, data, headers) {\n        return this.request(endpoint, {\n            method: \"PUT\",\n            headers,\n            body: data ? JSON.stringify(data) : undefined\n        });\n    }\n    // PATCH request\n    async patch(endpoint, data, headers) {\n        return this.request(endpoint, {\n            method: \"PATCH\",\n            headers,\n            body: data ? JSON.stringify(data) : undefined\n        });\n    }\n    // DELETE request\n    async delete(endpoint, headers) {\n        return this.request(endpoint, {\n            method: \"DELETE\",\n            headers\n        });\n    }\n    // Upload file\n    async uploadFile(endpoint, formData, headers) {\n        const token = this.getAuthToken();\n        const uploadHeaders = {\n            ...headers\n        };\n        if (token) {\n            uploadHeaders[\"Authorization\"] = \"Bearer \".concat(token);\n        }\n        // Remove Content-Type header to let browser set it with boundary\n        delete uploadHeaders[\"Content-Type\"];\n        return this.request(endpoint, {\n            method: \"POST\",\n            headers: uploadHeaders,\n            body: formData\n        });\n    }\n    constructor(){\n        this.baseURL = config.apiUrl;\n        this.defaultHeaders = {\n            \"Content-Type\": \"application/json\"\n        };\n    }\n}\n// Create singleton instance\nconst apiClient = new ApiClient();\n// Export specific API methods for common operations\nconst api = {\n    // Auth endpoints\n    auth: {\n        register: (data)=>apiClient.post(\"/api/auth/register\", data),\n        login: (data)=>apiClient.post(\"/api/auth/login\", data),\n        logout: ()=>apiClient.post(\"/api/auth/logout\"),\n        getProfile: ()=>apiClient.get(\"/api/auth/me\"),\n        updateProfile: (data)=>apiClient.put(\"/api/auth/profile\", data),\n        changePassword: (data)=>apiClient.put(\"/api/auth/change-password\", data)\n    },\n    // Product endpoints\n    products: {\n        getAll: (params)=>{\n            const queryString = params ? \"?\".concat(new URLSearchParams(params).toString()) : \"\";\n            return apiClient.get(\"/api/products\".concat(queryString));\n        },\n        getById: (id)=>apiClient.get(\"/api/products/\".concat(id)),\n        getFeatured: ()=>apiClient.get(\"/api/products/featured/featured\"),\n        getRandom: (limit)=>{\n            const queryString = limit ? \"?limit=\".concat(limit) : \"\";\n            return apiClient.get(\"/api/products/random/random\".concat(queryString));\n        },\n        create: (data)=>apiClient.post(\"/api/products\", data),\n        update: (id, data)=>apiClient.put(\"/api/products/\".concat(id), data),\n        delete: (id)=>apiClient.delete(\"/api/products/\".concat(id)),\n        upload: (formData)=>apiClient.uploadFile(\"/api/products/upload\", formData)\n    },\n    // Category endpoints\n    categories: {\n        getAll: ()=>apiClient.get(\"/api/categories\"),\n        getById: (id)=>apiClient.get(\"/api/categories/\".concat(id)),\n        getBySlug: (slug)=>apiClient.get(\"/api/categories/slug/\".concat(slug))\n    },\n    // Cart endpoints\n    cart: {\n        get: ()=>apiClient.get(\"/api/cart\"),\n        addItem: (data)=>apiClient.post(\"/api/cart/add\", data),\n        updateItem: (itemId, data)=>apiClient.patch(\"/api/cart/items/\".concat(itemId), data),\n        removeItem: (itemId)=>apiClient.delete(\"/api/cart/items/\".concat(itemId)),\n        clear: ()=>apiClient.delete(\"/api/cart/clear\"),\n        getCount: ()=>apiClient.get(\"/api/cart/count\")\n    },\n    // Order endpoints\n    orders: {\n        getAll: ()=>apiClient.get(\"/api/orders\"),\n        getMine: ()=>apiClient.get(\"/api/orders/my-orders\"),\n        getById: (id)=>apiClient.get(\"/api/orders/\".concat(id)),\n        create: (data)=>apiClient.post(\"/api/orders\", data),\n        updateStatus: (id, data)=>apiClient.put(\"/api/orders/\".concat(id, \"/status\"), data),\n        cancel: (id)=>apiClient.put(\"/api/orders/\".concat(id, \"/cancel\")),\n        getTracking: (id)=>apiClient.get(\"/api/orders/\".concat(id, \"/tracking\")),\n        // Admin endpoints\n        getAllAdmin: ()=>apiClient.get(\"/api/orders/admin/all\"),\n        getByIdAdmin: (id)=>apiClient.get(\"/api/orders/admin/\".concat(id)),\n        updateStatusAdmin: (id, data)=>apiClient.put(\"/api/orders/admin/\".concat(id, \"/status\"), data),\n        updateNotesAdmin: (id, data)=>apiClient.put(\"/api/orders/admin/\".concat(id, \"/notes\"), data),\n        getCount: ()=>apiClient.get(\"/api/orders/count\"),\n        getRecentActivity: (limit)=>{\n            const queryString = limit ? \"?limit=\".concat(limit) : \"\";\n            return apiClient.get(\"/api/orders/admin/recent-activity\".concat(queryString));\n        },\n        getAnalytics: ()=>apiClient.get(\"/api/orders/admin/analytics\")\n    },\n    // User endpoints\n    users: {\n        getProfile: ()=>apiClient.get(\"/api/users/profile\"),\n        updateProfile: (data)=>apiClient.put(\"/api/users/profile\", data),\n        updatePreferences: (data)=>apiClient.put(\"/api/users/preferences\", data),\n        getAll: ()=>apiClient.get(\"/api/users\"),\n        getById: (id)=>apiClient.get(\"/api/users/\".concat(id)),\n        update: (id, data)=>apiClient.put(\"/api/users/\".concat(id), data),\n        delete: (id)=>apiClient.delete(\"/api/users/\".concat(id)),\n        getStats: ()=>apiClient.get(\"/api/users/stats/overview\"),\n        getCount: ()=>apiClient.get(\"/api/users/count\")\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (apiClient);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./utils/api.ts\n"));

/***/ })

});