"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/products/[id]/page",{

/***/ "(app-pages-browser)/./utils/imageUtils.ts":
/*!*****************************!*\
  !*** ./utils/imageUtils.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCloudinaryUrl: function() { return /* binding */ getCloudinaryUrl; },\n/* harmony export */   getImageUrl: function() { return /* binding */ getImageUrl; },\n/* harmony export */   getImageUrlForEnv: function() { return /* binding */ getImageUrlForEnv; },\n/* harmony export */   getMainImageForColor: function() { return /* binding */ getMainImageForColor; },\n/* harmony export */   isValidImageUrl: function() { return /* binding */ isValidImageUrl; },\n/* harmony export */   loadImageWithFallback: function() { return /* binding */ loadImageWithFallback; }\n/* harmony export */ });\n// Utility function to get the correct image URL\nconst getImageUrl = (imagePath)=>{\n    if (!imagePath) {\n        return \"/images/placeholder-product.svg\";\n    }\n    // If it's already a full URL (Cloudinary or other), return as is\n    if (imagePath.startsWith(\"http://\") || imagePath.startsWith(\"https://\")) {\n        return imagePath;\n    }\n    // Get backend URL from environment or default\n    const backendUrl = \"http://localhost:5001\" || 0;\n    // If it's a relative path starting with /uploads, construct the full backend URL\n    if (imagePath.startsWith(\"/uploads/\")) {\n        return \"\".concat(backendUrl).concat(imagePath);\n    }\n    // If it's just a filename, construct the full path\n    if (!imagePath.startsWith(\"/\")) {\n        return \"\".concat(backendUrl, \"/uploads/products/\").concat(imagePath);\n    }\n    // For local images in public folder\n    return imagePath;\n};\n// Utility function to get the correct image URL for the current environment\nconst getImageUrlForEnv = (imagePath)=>{\n    const backendUrl = \"http://localhost:5001\" || 0;\n    if (!imagePath) return \"/images/products/hero-product-image.jpg\";\n    // If the image path is already a full URL, return it as is\n    if (imagePath.startsWith(\"http://\") || imagePath.startsWith(\"https://\")) {\n        return imagePath;\n    }\n    // If it's a relative path starting with /uploads, construct the full URL\n    if (imagePath.startsWith(\"/uploads/\")) {\n        return \"\".concat(backendUrl).concat(imagePath);\n    }\n    // If it's just a filename, construct the full path\n    if (!imagePath.startsWith(\"/\")) {\n        return \"\".concat(backendUrl, \"/uploads/products/\").concat(imagePath);\n    }\n    // For local images in public folder\n    return imagePath;\n};\n// Function to check if image URL is valid\nconst isValidImageUrl = (url)=>{\n    return Boolean(url && url.length > 0 && url !== \"/images/placeholder-product.svg\");\n};\n// Function to get optimized Cloudinary image URL\nconst getCloudinaryUrl = function(imagePath) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    if (!imagePath) {\n        return \"/images/placeholder-product.svg\";\n    }\n    // If it's not a Cloudinary URL, return as is\n    if (!imagePath.includes(\"res.cloudinary.com\")) {\n        return getImageUrl(imagePath);\n    }\n    // Build transformation parameters\n    const transformations = [];\n    if (options.width || options.height) {\n        const size = [];\n        if (options.width) size.push(\"w_\".concat(options.width));\n        if (options.height) size.push(\"h_\".concat(options.height));\n        if (options.crop) size.push(\"c_\".concat(options.crop));\n        if (size.length > 0) transformations.push(size.join(\",\"));\n    }\n    if (options.quality) {\n        transformations.push(\"q_\".concat(options.quality));\n    }\n    if (options.format) {\n        transformations.push(\"f_\".concat(options.format));\n    }\n    // Insert transformations into Cloudinary URL\n    if (transformations.length > 0) {\n        const urlParts = imagePath.split(\"/\");\n        const insertIndex = urlParts.findIndex((part)=>part === \"upload\") + 1;\n        urlParts.splice(insertIndex, 0, transformations.join(\"/\"));\n        return urlParts.join(\"/\");\n    }\n    return imagePath;\n};\n// Function to safely load an image with fallback (Client-side only)\nconst loadImageWithFallback = (imagePath, onSuccess, onError)=>{\n    const imageUrl = getImageUrl(imagePath);\n    // Only run in browser environment\n    if (true) {\n        // Create a temporary image element to test loading\n        const img = new Image();\n        img.onload = ()=>{\n            console.log(\"✅ Image loaded successfully:\", imageUrl);\n            onSuccess === null || onSuccess === void 0 ? void 0 : onSuccess(imageUrl);\n        };\n        img.onerror = ()=>{\n            console.error(\"❌ Image failed to load:\", imageUrl);\n            const fallbackUrl = \"/images/placeholder-product.svg\";\n            console.log(\"\\uD83D\\uDD04 Using fallback image:\", fallbackUrl);\n            onError === null || onError === void 0 ? void 0 : onError(\"Failed to load: \".concat(imageUrl));\n        };\n        // Start loading the image\n        img.src = imageUrl;\n    }\n    return imageUrl;\n};\n// Helper function to get the main image for a specific color\nconst getMainImageForColor = (product, colorName)=>{\n    if (!product || !product.images || product.images.length === 0) {\n        return null;\n    }\n    // First try to find color-specific images (excluding color representation images)\n    const colorImages = product.images.filter((img)=>img.color === colorName && img.isColorRepresentation !== true);\n    if (colorImages.length > 0) {\n        // Return the first image for this color (maintains original order)\n        // If there's a primary image, prioritize it, otherwise return first\n        const primaryImage = colorImages.find((img)=>img.isPrimary);\n        return primaryImage || colorImages[0];\n    }\n    // If no color-specific images, return general images (color: null or undefined)\n    const generalImages = product.images.filter((img)=>(img.color === null || img.color === undefined) && img.isColorRepresentation !== true);\n    if (generalImages.length > 0) {\n        const primaryImage = generalImages.find((img)=>img.isPrimary);\n        return primaryImage || generalImages[0];\n    }\n    // Fallback to any image\n    return product.images[0];\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./utils/imageUtils.ts\n"));

/***/ })

});